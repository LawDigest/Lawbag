# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Build and deploy Lawbag

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Deploy ENV: STAGE'
        required: true
        default: 'STAGE'
        type: string

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17 and build cache
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

            
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./lawmaking/gradlew

      - name: Execute Gradle build
        working-directory: ./lawmaking
        run: ./gradlew build -x test
        
      - name: Docker build & push to prod
        working-directory: ./lawmaking
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/lawmaking-back .
          docker push ${{ secrets.DOCKER_USERNAME }}/lawmaking-back


      ## deploy to production
      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: 52.79.63.140
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker ps -q --filter "name=lawmaking-back" | grep -q . && docker stop lawmaking-back && docker rm lawmaking-back | true
            docker pull ${{ secrets.DOCKER_USERNAME }}/lawmaking-back
            docker run -d -p 8080:8080 --name=lawmaking-back \
             -e "ACTIVE=${{ secrets.ACTIVE }}" \
             -e "DB_HOSTNAME=${{ secrets.DB_HOSTNAME }}" \
             -e "DB_NAME=${{ secrets.DB_NAME }}" \
             -e "DB_USERNAME=${{ secrets.DB_USERNAME }}" \
             -e "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
             -e "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" \
             -e "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" \
             -e "KAKAO_USER_NAME_ATTRIBUTE=${{ secrets.KAKAO_USER_NAME_ATTRIBUTE }}" \
             -e "TOKEN_EXPIRY=${{ secrets.TOKEN_EXPIRY }}" \
             -e "REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}" \
             -e "TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}" \
            ${{ secrets.DOCKER_USERNAME }}/lawmaking-back
            docker rmi -f $(docker images -f "dangling=true" -q) || true
          
            
        
