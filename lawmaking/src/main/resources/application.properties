spring.profiles.active=${ACTIVE}

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# SQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect



# Spring Security Config
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# DB config
spring.datasource.url=jdbc:mysql://${DB_HOSTNAME}:3306/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.datasource.username= ${DB_USERNAME}
spring.datasource.password= ${DB_PASSWORD}

# JPA Batch Size Config
spring.jpa.properties.hibernate.default_batch_fetch_size=500

# app jwt token configurations
app.auth.token-secret= ${TOKEN_SECRET}
app.auth.access-token-expiry= 30
app.auth.refresh-token-expiry= 10080

# binlog configurations
binlog.host = ${BIN_LOG_HOST}
binlog.port = ${BIN_LOG_PORT}
binlog.user = ${BIN_LOG_USER}
binlog.password = ${BIN_LOG_PASSWORD}

# DB connection configuration
db-connection-pool.db-name = ${DB_NAME}

# Redis Config
spring.data.redis.host=${ELASTIC_CACHE_HOST}
spring.data.redis.password=${ELASTIC_CACHE_PASSWORD}
spring.data.redis.port=6379
spring.data.redis.repositories.enabled=false

# Redirect_URI To Client
app.oauth2.client-redirect-uri = http://localhost:3000/,https://lawdigest.net/,https://localhost.lawdigest.net:3000,http://localhost.lawdigest.net:3000,https://localhost.lawdigest.net:7070,http://localhost.lawdigest.net:7070

# Swagger
springdoc.swagger-ui.path=/v1/swagger-ui
server.forward-headers-strategy=FRAMEWORK

#Kakao Config
app.auth.kakao-app-admin-key = ${APP_ADMIN_KEY}
app.auth.kakao-app-client-id=${KAKAO_CLIENT_ID}
app.auth.kakao-app-client-secret=${KAKAO_CLIENT_SECRET}

spring.security.oauth2.client.registration.kakao.client-id = ${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret = ${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email, profile_image
spring.security.oauth2.client.registration.kakao.client-name = KAKAO
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method = client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id

#Naver Config
app.auth.naver-app-client-id=${NAVER_CLIENT_ID}
app.auth.naver-app-client-secret=${NAVER_CLIENT_SECRET}

spring.security.oauth2.client.registration.naver.client-id = ${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret = ${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.scope = profile_nickname, account_email, profile_image
spring.security.oauth2.client.registration.naver.client-name = NAVER
spring.security.oauth2.client.registration.naver.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.naver.client-authentication-method = client_secret_post

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#Google Config
app.auth.google-app-client-id= ${GOOGLE_CLIENT_ID}
app.auth.google-app-client-secret= ${GOOGLE_CLIENT_SECRET}

spring.security.oauth2.client.registration.google.client-id = ${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret = ${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope = profile, email
spring.security.oauth2.client.registration.google.client-name = GOOGLE
spring.security.oauth2.client.registration.google.additional-parameters.access-type= offline
spring.security.oauth2.client.registration.google.additional-parameters.prompt = consent
spring.security.oauth2.client.registration.google.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.google.client-authentication-method = client_secret_post


spring.security.oauth2.client.provider.google.authorization-uri = https://accounts.google.com/o/oauth2/auth?access_type=offline&prompt=consent
spring.security.oauth2.client.provider.google.token-uri = https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri = https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute = sub

